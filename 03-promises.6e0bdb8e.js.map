{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBA8BxC,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WAEWC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAtCHR,EAAOe,iBAAiB,UAGxB,SAAkBC,GAChBA,EAAMC,iBAUN,IARA,IAAMC,EAAcC,OAAOhB,EAAQiB,OAC7BC,EAAaF,OAAOf,EAAOgB,OAC3BE,EAAeH,OAAOd,EAASe,OAC/BG,EAAeL,EAAcG,GAAcG,EAAI,GAK5CC,EAAI,EAAGA,GAAKH,EAAcG,GAAK,EAEtCnB,EAAcmB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAEnEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\n\nformEl.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const delayNumber = Number(delayEl.value);\n  const stepNumber = Number(stepEl.value);\n  const amountNumber = Number(amountEl.value);\n  const promiseDelay = delayNumber + stepNumber * (i - 1);\n  // console.log (delayNumber);\n  // console.log (stepNumber);\n  // console.log (amountNumber);\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n\n  const shouldResolve = Math.random() > 0.3;\n  \n  if (shouldResolve) {\n    resolve({ position, delay });\n  } else {\n    reject({ position, delay });\n  }\n}, delay);\n});\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayNumber","Number","value","stepNumber","amountNumber","promiseDelay","i","_$i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6e0bdb8e.js.map"}